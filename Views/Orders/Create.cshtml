@model ERP_Bicicleteria.Models.OrderViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Order</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- EmployeeId Select -->
            <div class="form-group">
                <label asp-for="EmployeeId" class="control-label"></label>
                <select asp-for="EmployeeId" class="form-control" asp-items="ViewBag.EmployeeId">
                    <option value="">Seleccione un empleado</option> <!-- Valor por defecto -->
                </select>
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>

            <!-- ClientId Select -->
            <div class="form-group">
                <label asp-for="ClientId" class="control-label"></label>
                <select asp-for="ClientId" class="form-control" asp-items="ViewBag.ClientId">
                    <option value="">Seleccione un cliente</option> <!-- Valor por defecto -->
                </select>
                <span asp-validation-for="ClientId" class="text-danger"></span>
            </div>

            <!-- OrderDate Input -->
            <div class="form-group">
                <label asp-for="OrderDate" class="control-label"></label>
                <input asp-for="OrderDate" class="form-control" type="date" />
                <span asp-validation-for="OrderDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Productos</label>
                <div id="product-container">
                    <div class="product-row mb-2">
                        <select name="OrderDetails[0].ProductId" class="form-control" asp-items="ViewBag.ProductList">
                            <option value="">Seleccione un producto</option>
                        </select>
                        <input type="number" name="OrderDetails[0].Quantity" class="form-control" placeholder="Cantidad" min="1" />
                        <button type="button" class="btn btn-danger btn-sm remove-product">Eliminar</button>
                    </div>
                </div>
                <button type="button" id="add-product" class="btn btn-secondary btn-sm">Añadir producto</button>
            </div>

            <!-- Botón de submit y scripts -->
            @section Scripts {
                @{
                    await Html.RenderPartialAsync("_ValidationScriptsPartial");
                }

                <script>
                    // Datos iniciales de productos (cargados desde el servidor)
                    const productList = @Html.Raw(Json.Serialize(ViewBag.ProductList as SelectList));

                    $(document).ready(function() {
                        let index = 1;

                        // Función para crear un nuevo select de productos
                        function createProductSelect(index) {
                            const select = document.createElement('select');
                            select.name = `OrderDetails[${index}].ProductId`;
                            select.className = 'form-control';

                            // Agregar opción por defecto
                            const defaultOption = document.createElement('option');
                            defaultOption.value = '';
                            defaultOption.text = 'Seleccione un producto';
                            select.appendChild(defaultOption);

                            // Agregar opciones de productos
                            productList.forEach(item => {
                                const option = document.createElement('option');
                                option.value = item.value;
                                option.text = item.text;
                                select.appendChild(option);
                            });

                            return select;
                        }

                        $("#add-product").click(function() {
                            const newRow = document.createElement('div');
                            newRow.className = 'product-row mb-2';

                            // Crear select de productos
                            const productSelect = createProductSelect(index);
                            newRow.appendChild(productSelect);

                            // Crear input de cantidad
                            const quantityInput = document.createElement('input');
                            quantityInput.type = 'number';
                            quantityInput.name = `OrderDetails[${index}].Quantity`;
                            quantityInput.className = 'form-control';
                            quantityInput.placeholder = 'Cantidad';
                            quantityInput.min = '1';
                            newRow.appendChild(quantityInput);

                            // Crear botón de eliminar
                            const removeButton = document.createElement('button');
                            removeButton.type = 'button';
                            removeButton.className = 'btn btn-danger btn-sm remove-product';
                            removeButton.textContent = 'Eliminar';
                            newRow.appendChild(removeButton);

                            // Agregar al contenedor
                            document.getElementById('product-container').appendChild(newRow);
                            index++;
                        });

                        $(document).on('click', '.remove-product', function() {
                            $(this).closest('.product-row').remove();
                        });
                    });
                </script>
            }

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

